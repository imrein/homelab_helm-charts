appname: twitchminer
replicas: 1
image:
  repository: rdavidoff/twitch-channel-points-miner-v2
  version: 1.9.9

service:
  name: twitchminer-service
  type: ClusterIP
  ports:
    - name: http
      port: 5000
      targetPort: 5000

ingress:
  enabled: false

secrets:
  - name: twitchminer
    path: twitchminer

envFrom:
  - secretName: twitchminer

resources:
  limits:
    memory: 100Mi
  requests:
    memory: 100Mi

pvc:
  enabled: false

volumes:
  - name: twitchminer
    type: configMap
    configMap: twitchminer
    mountPath: /usr/src/app/run.py
    subPath: run.py
    data:
      run.py: |
        import logging
        import os
        from colorama import Fore
        from TwitchChannelPointsMiner import TwitchChannelPointsMiner
        from TwitchChannelPointsMiner.logger import LoggerSettings, ColorPalette
        from TwitchChannelPointsMiner.classes.Chat import ChatPresence
        from TwitchChannelPointsMiner.classes.Discord import Discord
        from TwitchChannelPointsMiner.classes.Telegram import Telegram
        from TwitchChannelPointsMiner.classes.Settings import Priority, Events, FollowersOrder
        from TwitchChannelPointsMiner.classes.entities.Bet import Strategy, BetSettings, Condition, OutcomeKeys, FilterCondition, DelayMode
        from TwitchChannelPointsMiner.classes.entities.Streamer import Streamer, StreamerSettings

        twitch_miner = TwitchChannelPointsMiner(
            username = os.environ.get("username"),
            password = os.environ.get("password"),           # If no password will be provided, the script will ask interactively
            claim_drops_startup=True,                  # If you want to auto claim all drops from Twitch inventory on the startup
            priority=[                                  # Custom priority in this case for example:
                Priority.STREAK,                        # - We want first of all to catch all watch streak from all streamers
                Priority.DROPS,                         # - When we don't have anymore watch streak to catch, wait until all drops are collected over the streamers
                Priority.ORDER                          # - When we have all of the drops claimed and no watch-streak available, use the order priority (POINTS_ASCENDING, POINTS_DESCEDING)
            ],
            enable_analytics=False,         # Disables Analytics if False. Disabling it significantly reduces memory consumption
            disable_ssl_cert_verification=False,    # Set to True at your own risk and only to fix SSL: CERTIFICATE_VERIFY_FAILED error
            logger_settings=LoggerSettings(
                save=True,                              # If you want to save logs in a file (suggested)
                console_level=logging.INFO,             # Level of logs - use logging.DEBUG for more info
                console_username=False,         # Adds a username to every console log line if True. Useful when you have many open consoles with different accounts
                file_level=logging.DEBUG,               # Level of logs - If you think the log file it's too big, use logging.INFO
                emoji=True,                             # On Windows, we have a problem printing emoji. Set to false if you have a problem
                less=False,                             # If you think that the logs are too verbose, set this to True
                colored=True,                           # If you want to print colored text
                color_palette=ColorPalette(             # You can also create a custom palette color (for the common message).
                    STREAMER_online="GREEN",            # Don't worry about lower/upper case. The script will parse all the values.
                    streamer_offline="red",             # Read more in README.md
                    BET_wiN=Fore.MAGENTA                # Color allowed are: [BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET].
                ),
            ),
            streamer_settings=StreamerSettings(
                make_predictions=False,                  # If you want to Bet / Make prediction
                follow_raid=True,                       # Follow raid to obtain more points
                claim_drops=True,                       # We can't filter rewards base on stream. Set to False for skip viewing counter increase and you will never obtain a drop reward from this script. Issue #21
                watch_streak=True,                      # If a streamer go online change the priority of streamers array and catch the watch screak. Issue #11
                chat=ChatPresence.ONLINE,               # Join irc chat to increase watch-time [ALWAYS, NEVER, ONLINE, OFFLINE]
                bet=BetSettings(
                    strategy=Strategy.SMART,            # Choose you strategy!
                    percentage=5,                       # Place the x% of your channel points
                    percentage_gap=20,                  # Gap difference between outcomesA and outcomesB (for SMART strategy)
                    max_points=50000,                   # If the x percentage of your channel points is gt bet_max_points set this value
                    stealth_mode=True,                  # If the calculated amount of channel points is GT the highest bet, place the highest value minus 1-2 points Issue #33
                    delay_mode=DelayMode.FROM_END,      # When placing a bet, we will wait until `delay` seconds before the end of the timer
                    delay=6,
                    minimum_points=20000,               # Place the bet only if we have at least 20k points. Issue #113
                    filter_condition=FilterCondition(
                        by=OutcomeKeys.TOTAL_USERS,     # Where apply the filter. Allowed [PERCENTAGE_USERS, ODDS_PERCENTAGE, ODDS, TOP_POINTS, TOTAL_USERS, TOTAL_POINTS]
                        where=Condition.LTE,            # 'by' must be [GT, LT, GTE, LTE] than value
                        value=800
                    )
                )
            )
        )

        twitch_miner.mine(
            [
                Streamer("x"),
                Streamer("y"),
                Streamer("z")
            ]
        )

  - name: analytics
    type: emptyDir
    mountPath: /usr/src/app/analytics

  - name: cookies
    type: emptyDir
    mountPath: /usr/src/app/cookies

  - name: logs
    type: emptyDir
    mountPath: /usr/src/app/logs
