{{- define "lib.deployment" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.appname }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appname }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Values.appname }}
          image: {{ .Values.image.repository }}:{{ .Values.image.version }}
          imagePullPolicy: IfNotPresent
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.envFrom }}
          envFrom:
        {{- range .Values.envFrom }}
            - secretRef:
                name: {{ .secretName }}-secret
        {{- end }}
      {{- end }}
      {{- if .Values.env }}
          env:
        {{- range .Values.env }}
          {{- if .secret }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret }}-secret
                  key: {{ .key }}
          {{- else }}
            - name: {{ .name }}
              value: "{{ .value }}"
          {{- end }}
        {{- end }}
      {{- end }}
          ports:
          {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol | default "TCP" }}
          {{- end }}
          {{- with .Values.postStartCommands }}
          lifecycle:
            postStart:
              exec:
                command:
                  {{- toYaml . | nindent 18 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.volumes }}
          volumeMounts:
      {{- range .Values.volumes }}
        {{- if eq .type "block" }}
            - name: {{ $.Values.appname }}-vol
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
        {{- else if eq .type "nfs" }}
            - name: {{ .name }}-vol
              mountPath: {{ .mountPath }}
        {{- else if eq .type "configMap" }}
            - name: {{ .name }}-config
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
        {{- else if eq .type "emptyDir" }}
            - name: {{ .name }}-dir
              mountPath: {{ .mountPath }}
        {{- end }}
      {{- end }}
      volumes:
      {{- if .Values.pvc.enabled }}
        - name: {{ .Values.appname }}-vol
          persistentVolumeClaim:
            claimName: pvc-{{ .Values.appname }}
      {{- end }}
      {{- range .Values.volumes }}
        {{- if eq .type "nfs" }}
        - name: {{ .name }}-vol
          nfs:
            server: {{ .server }}
            path: {{ .path }}
        {{- else if eq .type "configMap" }}
        - name: {{ .name }}-config
          configMap:
            name: {{ .configMap }}-config
        {{- else if eq .type "emptyDir" }}
        - name: {{ .name }}-dir
          emptyDir: {}
        {{- end }}
      {{- end }}
      {{- end }}
      nodeSelector:
        worker: "true"
{{- end }}